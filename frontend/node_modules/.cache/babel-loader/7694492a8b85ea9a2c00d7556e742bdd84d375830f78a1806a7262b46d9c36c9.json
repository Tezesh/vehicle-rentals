{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saite\\\\OneDrive\\\\Desktop\\\\vehicle-rentals\\\\frontend\\\\src\\\\components\\\\layout\\\\AdminRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  const [isAdmin, setIsAdmin] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const checkAdminStatus = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setIsAdmin(false);\n        setLoading(false);\n        return;\n      }\n      try {\n        // Try to decode the token to check role\n        const payload = JSON.parse(atob(token.split('.')[1]));\n\n        // Make API call to verify admin status\n        const response = await fetch('http://localhost:5000/api/users/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const user = await response.json();\n          setIsAdmin(user.role === 'admin');\n        } else {\n          setIsAdmin(false);\n        }\n      } catch (error) {\n        console.error('Error checking admin status:', error);\n        setIsAdmin(false);\n      }\n      setLoading(false);\n    };\n    checkAdminStatus();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/admin/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(AdminRoute, \"MIp3H6bZzQBlSIw6r4sPu8CzEv4=\", false, function () {\n  return [useLocation];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","useLocation","jsxDEV","_jsxDEV","AdminRoute","children","_s","location","isAdmin","setIsAdmin","loading","setLoading","checkAdminStatus","token","localStorage","getItem","payload","JSON","parse","atob","split","response","fetch","headers","ok","user","json","role","error","console","className","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["C:/Users/saite/OneDrive/Desktop/vehicle-rentals/frontend/src/components/layout/AdminRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nconst AdminRoute = ({ children }) => {\r\n  const location = useLocation();\r\n  const [isAdmin, setIsAdmin] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkAdminStatus = async () => {\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!token) {\r\n        setIsAdmin(false);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // Try to decode the token to check role\r\n        const payload = JSON.parse(atob(token.split('.')[1]));\r\n\r\n        // Make API call to verify admin status\r\n        const response = await fetch('http://localhost:5000/api/users/me', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (response.ok) {\r\n          const user = await response.json();\r\n          setIsAdmin(user.role === 'admin');\r\n        } else {\r\n          setIsAdmin(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking admin status:', error);\r\n        setIsAdmin(false);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAdminStatus();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center align-items-center\" style={{ minHeight: '100vh' }}>\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAdmin) {\r\n    return <Navigate to=\"/admin/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default AdminRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACVJ,UAAU,CAAC,KAAK,CAAC;QACjBE,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,IAAI;QACF;QACA,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAErD;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUV,KAAK,EAAE;YAClC,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIQ,QAAQ,CAACG,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClCjB,UAAU,CAACgB,IAAI,CAACE,IAAI,KAAK,OAAO,CAAC;QACnC,CAAC,MAAM;UACLlB,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDnB,UAAU,CAAC,KAAK,CAAC;MACnB;MAEAE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBACEP,OAAA;MAAK2B,SAAS,EAAC,kDAAkD;MAACC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAA3B,QAAA,eAC9FF,OAAA;QAAK2B,SAAS,EAAC,6BAA6B;QAACH,IAAI,EAAC,QAAQ;QAAAtB,QAAA,eACxDF,OAAA;UAAM2B,SAAS,EAAC,iBAAiB;UAAAzB,QAAA,EAAC;QAAU;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAI,CAAC5B,OAAO,EAAE;IACZ,oBAAOL,OAAA,CAACH,QAAQ;MAACqC,EAAE,EAAC,cAAc;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEhC;MAAS,CAAE;MAACiC,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E;EAEA,OAAO/B,QAAQ;AACjB,CAAC;AAACC,EAAA,CA3DIF,UAAU;EAAA,QACGH,WAAW;AAAA;AAAAwC,EAAA,GADxBrC,UAAU;AA6DhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}